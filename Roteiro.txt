
> Maioria das novas linguagens so' tem 1 usuario, e depois morre.

> As linguagens bem sucedidas chegam a uns 100 usuarios, e morrem.

> Algumas linguagens se tornam imortais, por causa da quantidade de usuarios.

> Linguagens academicas ficam sempre no 0.

> Haskell e' uma linguagem academica, mas teve um renascimento.

> Implementar filter

filter :: (a -> Bool) -> [a] -> [a]
filter p [] = []
filter p (x:xs) 
    | p x       = x : filter p xs
    | otherwise = filter ps xs


> Ressaltar;
>> Type signature
>> Higher order function
>> Polymorphism (works for any a)



> Implementar member

member :: a -> [a] -> Bool
member x []                 = False
member x (y:ys) | x == y    = True
                | otherwise = member x ys

> Funciona pra QUALQUER TIPO a???




2 + 2
3 / 2
2 * (-4)

3 ^ (19 * 19)

True && False
True || False

not True

3 == 4
3 /= 4

max 3 5 * 2
(3 `max` 5) * 2

fac = ?
fib = ? 

ns = [1, 2, 3]
ns2 = [1..3]



